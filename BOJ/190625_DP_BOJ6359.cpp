// 백준 6359번 - 만취한 상범

/*
0 : 잠김
1 : 열림

n=1	1
0	0
1	1	-> 1

n=2	1 2
0	0 0
1	1 1
2	1 0	-> 1

n=3	1 2 3
0	0 0 0
1	1 1 1
2	1 0 1
3	1 0 0	-> 1

n=4	1 2 3 4
0	0 0 0 0
1	1 1 1 1
2	1 0 1 0
3	1 0 0 0
4	1 0 0 1	-> 2

n=5	1 2 3 4 5
0	0 0 0 0 0
1	1 1 1 1 1
2	1 0 1 0 1
3	1 0 0 0 1
4	1 0 0 1 1
5	1 0 0 1 0	-> 2

n=6	1 2 3 4 5 6
0	0 0 0 0 0 0
1	1 1 1 1 1 1
2	1 0 1 0 1 0
3	1 0 0 0 1 1
4	1 0 0 1 1 1
5	1 0 0 1 0 1
6	1 0 0 1 0 0	 -> 2

--> 앞에꺼 그대로 갖다쓰고 맨 끝 줄만 추가됨! 
*/

#include <stdio.h>

int dp[105] = { 0,1 };

int main() {
	int t;
	scanf("%d", &t);
	while (t--) {
		int n;
		scanf("%d", &n);

		for (int i = 1; i <= n; i++) {
		// dp[n]을 갖다 쓰려면 1부터 n까지 다 채워져있어야 함
		// 아직 안 채워진 dp[i]를 bottom up 으로 채우기
			if (!dp[i]) {

				// 2부터 i까지의 수 중에 i를 나눠 떨어지게 하는 수의 개수 세기
				int cnt = 0;
				for (int j = 2; j <= i; j++) {
					if (i%j == 0) cnt++;
				}

				// 홀수 개면 0으로 바뀌므로 잠김 -> dp[i-1]이랑 같음
				if (cnt % 2) dp[i] = dp[i - 1];
				// 짝수 개면 1이므로 열림 -> dp[i-1]보다 하나 추가
				else dp[i] = dp[i - 1] + 1;
			}
		}

		printf("%d\n", dp[n]);
	}
}

